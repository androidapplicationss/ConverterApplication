name: Android CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Install Android SDK
        run: |
          mkdir -p $HOME/android-sdk
          cd $HOME/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip commandlinetools-linux-8512546_latest.zip
          mv cmdline-tools latest
          yes | ./latest/bin/sdkmanager --licenses
          ./latest/bin/sdkmanager "platforms;android-30" "build-tools;30.0.3"

      - name: Set up Android environment
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/android-sdk/platform-tools:$HOME/android-sdk/latest/bin" >> $GITHUB_ENV

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build APK
        run: ./gradlew assembleRelease  # Build the release APK

      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: app/build/outputs/apk/release/app-release.apk  # Adjust path if necessary

  release:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after the build job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/release/app-release.apk  # Path to the APK file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify QA
        run: echo "APK build and release created. Notify QA team to review the release."
        # Replace this with actual notification logic if needed
